<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="$(TargetDir)/Xunit.core.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="Xunit" #>
<#@ output extension=".cs" #>
<#

var inputFilePath = this.Host.ResolvePath("../../BuildNotifications.Core/Text/Texts.en.resx");
var xml = XDocument.Load(inputFilePath);

var names = xml.Descendants("data").Select(x=>x.Attribute("name")?.Value).Where(x=>!string.IsNullOrWhiteSpace(x)).ToList();

#>
using System;
using Xunit;
using BuildNotifications.Core.Text;

// ReSharper disable All
namespace BuildNotifications.Core.Tests.Text
{
	public partial class StringLocalizerTests
	{
        public static TheoryData<string, Func<string>> TextProperties => new TheoryData<string, Func<string>>
        {<# 
		    WriteLine("");
            foreach( var name in names )
        {
        WriteLine( $"           {{\"{name}\", () => StringLocalizer.{name}}},");
        }#>
        };
	}
}