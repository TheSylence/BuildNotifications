<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ output extension=".cs" #>
<#

var inputFilePath = this.Host.ResolvePath("Texts.en.resx");
var xml = XDocument.Load(inputFilePath);

var names = xml.Descendants("data").Select(x=>x.Attribute("name")?.Value).Where(x=>!string.IsNullOrWhiteSpace(x)).ToList();

#>
// ReSharper disable All
namespace BuildNotifications.Core.Text
{
    public partial class StringLocalizer
    {<#
		WriteLine("");
        foreach (var name in names)
        {
            WriteLine($"        public static string {name} => Instance[\"{name}\"];");
        }
	#>

        public static class Keys
        {<#
		    WriteLine("");
            foreach (var name in names)
            {
                WriteLine($"             public const string {name} = \"{name}\";");
            }

    #>

             public static System.Collections.Generic.IEnumerable<string> All()
             {<#
		        WriteLine("");
                foreach (var name in names)
                {
                    WriteLine($"                 yield return \"{name}\";");
                }
        #>
             }
        }
    }
}