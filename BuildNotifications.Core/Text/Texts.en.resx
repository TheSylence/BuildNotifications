<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NativeName" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="GroupBy" xml:space="preserve">
    <value>Group by</value>
  </data>
  <data name="ThenBy" xml:space="preserve">
    <value>Then by</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="BuildDefinition" xml:space="preserve">
    <value>Definition</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Branch" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="StatusDescending" xml:space="preserve">
    <value>by status descending</value>
  </data>
  <data name="StatusAscending" xml:space="preserve">
    <value>by status ascending</value>
  </data>
  <data name="AlphabeticalDescending" xml:space="preserve">
    <value>alphabetically descending</value>
  </data>
  <data name="AlphabeticalAscending" xml:space="preserve">
    <value>alphabetically ascending</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="BuildPluginType" xml:space="preserve">
    <value>Build Plugin</value>
  </data>
  <data name="SourceControlPluginType" xml:space="preserve">
    <value>Source Plugin</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="BranchBlacklist" xml:space="preserve">
    <value>Branch blacklist</value>
  </data>
  <data name="BranchWhitelist" xml:space="preserve">
    <value>Branch whitelist</value>
  </data>
  <data name="BuildConnectionNames" xml:space="preserve">
    <value>Build providing connections</value>
  </data>
  <data name="Connections" xml:space="preserve">
    <value>Connections</value>
  </data>
  <data name="BuildDefinitionBlacklist" xml:space="preserve">
    <value>Build-Definition blacklist</value>
  </data>
  <data name="BuildDefinitionWhitelist" xml:space="preserve">
    <value>Build-Definition whitelist</value>
  </data>
  <data name="DefaultCompareBranch" xml:space="preserve">
    <value>Compare branch</value>
  </data>
  <data name="HideCompletedPullRequests" xml:space="preserve">
    <value>Hide completed pull requests</value>
  </data>
  <data name="LoadWhitelistedBranchesExclusively" xml:space="preserve">
    <value>Load whitelisted branches exclusively</value>
  </data>
  <data name="LoadWhitelistedDefinitionsExclusively" xml:space="preserve">
    <value>Load whitelisted definitions exclusively</value>
  </data>
  <data name="ShowPullRequests" xml:space="preserve">
    <value>Show pull requests</value>
  </data>
  <data name="SourceControlConnectionNames" xml:space="preserve">
    <value>Source control providing connections</value>
  </data>
  <data name="NewConnection" xml:space="preserve">
    <value>New connection</value>
  </data>
  <data name="NewProject" xml:space="preserve">
    <value>New project</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="BuildsToLoadCount" xml:space="preserve">
    <value>Builds to load</value>
  </data>
  <data name="BuildsToShow" xml:space="preserve">
    <value>Builds per group</value>
  </data>
  <data name="UpdateInterval" xml:space="preserve">
    <value>Update interval</value>
  </data>
  <data name="CanceledBuildNotifyConfig" xml:space="preserve">
    <value>Notify level for cancelled builds</value>
  </data>
  <data name="FailedBuildNotifyConfig" xml:space="preserve">
    <value>Notify level for failed builds</value>
  </data>
  <data name="SucceededBuildNotifyConfig" xml:space="preserve">
    <value>Notify level for succeeded builds</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="InitialSetupEmptyConf" xml:space="preserve">
    <value>Welcome to BuildNotifications. To get started create a new connection with provider of your choice.</value>
  </data>
  <data name="InitialSetupEmptyConnections" xml:space="preserve">
    <value>A project needs a connection to work off. Create a new one in the "Connections" Tab.</value>
  </data>
  <data name="InitialSetupConnectionNotAsBuildOrSource" xml:space="preserve">
    <value>Setup your project by adding your connection. Both to the list to fetch builds of, as well as the list of source control providing connections.</value>
  </data>
  <data name="ErrorFetchingBranches" xml:space="preserve">
    <value>An error occurred while fetching Branches for project "{0}". Error: 
{1}</value>
  </data>
  <data name="ErrorFetchingBuilds" xml:space="preserve">
    <value>An error occurred while fetching Builds for project "{0}". Error: 
{1}</value>
  </data>
  <data name="ErrorFetchingDefinitions" xml:space="preserve">
    <value>An error occurred while fetching Build-Definitions for project "{0}". Error: 
{1}</value>
  </data>
  <data name="DefinitionChangedTextId" xml:space="preserve">
    <value>Definition {1}.</value>
  </data>
  <data name="TwoDefinitionsChangedTextId" xml:space="preserve">
    <value>Definitions {1} and {2}.</value>
  </data>
  <data name="ThreeDefinitionsChangedTextId" xml:space="preserve">
    <value>Definitions {1}, {2} and {3}.</value>
  </data>
  <data name="BuildChangedTextId" xml:space="preserve">
    <value>{1} on {2}.</value>
  </data>
  <data name="BuildsChangedTextId" xml:space="preserve">
    <value>{1} builds.</value>
  </data>
  <data name="FailedSingular" xml:space="preserve">
    <value>failed</value>
  </data>
  <data name="FailedPlural" xml:space="preserve">
    <value>failed</value>
  </data>
  <data name="SucceededSingular" xml:space="preserve">
    <value>succeeded</value>
  </data>
  <data name="SucceededPlural" xml:space="preserve">
    <value>succeeded</value>
  </data>
  <data name="CancelledSingular" xml:space="preserve">
    <value>was cancelled</value>
  </data>
  <data name="CancelledPlural" xml:space="preserve">
    <value>were cancelled</value>
  </data>
  <data name="BranchChangedTextId" xml:space="preserve">
    <value>Branch {1}.</value>
  </data>
  <data name="TwoBranchesChangedTextId" xml:space="preserve">
    <value>Branches {1} and {2}.</value>
  </data>
  <data name="ThreeBranchesChangedTextId" xml:space="preserve">
    <value>Branches {1}, {2} {3}.</value>
  </data>
  <data name="BranchAndDefinitionFailedTextId" xml:space="preserve">
    <value>{1} on {2}.</value>
  </data>
  <data name="BuildNotificationContentPluralTextId" xml:space="preserve">
    <value>{1} builds {0}.</value>
  </data>
  <data name="BuildNotificationContentSingularTextId" xml:space="preserve">
    <value>Build {0}.</value>
  </data>
  <data name="NDaysAgoTextId" xml:space="preserve">
    <value>{0} days ago</value>
  </data>
  <data name="OneDayAgoTextId" xml:space="preserve">
    <value>1 Day ago</value>
  </data>
  <data name="NHoursAgoTextId" xml:space="preserve">
    <value>{0} Hours ago</value>
  </data>
  <data name="NMinutesAgoTextId" xml:space="preserve">
    <value>{0} Minutes ago</value>
  </data>
  <data name="NSecondsAgoTextId" xml:space="preserve">
    <value>{0} Seconds ago</value>
  </data>
  <data name="JustNowTextId" xml:space="preserve">
    <value>Just now</value>
  </data>
  <data name="AnErrorOccured" xml:space="preserve">
    <value>An error occurred.</value>
  </data>
  <data name="ConnectionNotFound" xml:space="preserve">
    <value>No connection with name '{0}' found.</value>
  </data>
  <data name=" " xml:space="preserve">
    <value>No source control plugin '{0}' found.</value>
  </data>
  <data name="FailedToConstructBranchProviderFromPlugin" xml:space="preserve">
    <value>Failed to construct branch provider from plugin '{0}'. Error:
{1}</value>
  </data>
  <data name="BuildPluginNotFound" xml:space="preserve">
    <value>No build plugin '{0}' found.</value>
  </data>
  <data name="FailedToConstructBuildProviderFromPlugin" xml:space="preserve">
    <value>Failed to construct build provider from plugin '{0}'. Error:
{1}</value>
  </data>
  <data name="FailedToConstructBuildProviderForConnection" xml:space="preserve">
    <value>Failed to construct build provider for connection '{0}'.</value>
  </data>
  <data name="FailedToConstructBranchProviderForConnection" xml:space="preserve">
    <value>Failed to construct branch provider for connection '{0}'.</value>
  </data>
  <data name="DateDescending" xml:space="preserve">
    <value>by date descending</value>
  </data>
  <data name="ErrorFetchingUserIdentities" xml:space="preserve">
    <value>An error occurred while fetching the current user identity of project "{0}". Error:
{1}</value>
  </data>
  <data name="EditConnection" xml:space="preserve">
    <value>Edit connections</value>
  </data>
  <data name="TestConnection" xml:space="preserve">
    <value>Test connection</value>
  </data>
  <data name="TreeIsEmpty" xml:space="preserve">
    <value>No builds</value>
  </data>
  <data name="Testing" xml:space="preserve">
    <value>Testing...</value>
  </data>
  <data name="NoNotifications" xml:space="preserve">
    <value>No notifications</value>
  </data>
  <data name="BuildConnectionTestFailed" xml:space="preserve">
    <value>Build plugin failed</value>
  </data>
  <data name="SourceConnectionTestFailed" xml:space="preserve">
    <value>Source control plugin failed</value>
  </data>
  <data name="ConnectionTestSuccessful" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="ConnectionTestCaption" xml:space="preserve">
    <value>A connection was established and the plugin reported no error.</value>
  </data>
  <data name="InitialSetupUntested" xml:space="preserve">
    <value>To check whether your parameters are correct. Press the 'Test connection' button.</value>
  </data>
  <data name="InitialSetupTested" xml:space="preserve">
    <value>Now that your connection is set up. Create a new project which uses this connection.</value>
  </data>
  <data name="InitialSetupConnectionNotAsBuild" xml:space="preserve">
    <value>Also add your connection to the list of build providing connections.</value>
  </data>
  <data name="InitialSetupConnectionNotAsSource" xml:space="preserve">
    <value>Also add your connection to the list of source control providing connections.</value>
  </data>
  <data name="CloseConnections" xml:space="preserve">
    <value>Close and resume</value>
  </data>
  <data name="InitialSetupCompleteConfig" xml:space="preserve">
    <value>BuildNotifications is set up and ready to go. Click "Close and resume" to start.</value>
  </data>
  <data name="NotificationNotFound" xml:space="preserve">
    <value>Notification was not found.</value>
  </data>
  <data name="BranchesCount" xml:space="preserve">
    <value>{0} branches</value>
  </data>
  <data name="DefinitionsCount" xml:space="preserve">
    <value>{0} definitions</value>
  </data>
  <data name="ShowWindow" xml:space="preserve">
    <value>Show window</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="GoToBuild" xml:space="preserve">
    <value>Go to build</value>
  </data>
  <data name="GoToBranch" xml:space="preserve">
    <value>Go to branch</value>
  </data>
  <data name="GoToDefinition" xml:space="preserve">
    <value>Go to build definition</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Running" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="Succeeded" xml:space="preserve">
    <value>Succeeded</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="PartiallySucceeded" xml:space="preserve">
    <value>Partially succeeded</value>
  </data>
  <data name="RequestedBy" xml:space="preserve">
    <value>Requested by</value>
  </data>
  <data name="RequestedFor" xml:space="preserve">
    <value>Requested for</value>
  </data>
</root>