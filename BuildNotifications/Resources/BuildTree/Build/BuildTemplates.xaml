<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModelTree="clr-namespace:BuildNotifications.ViewModel.Tree"
                    xmlns:resourcesBuildTreeBuild="clr-namespace:BuildNotifications.Resources.BuildTree.Build"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:triggerActions="clr-namespace:BuildNotifications.Resources.BuildTree.TriggerActions"
                    xmlns:converter="clr-namespace:BuildNotifications.Resources.BuildTree.Converter"
                    xmlns:text="clr-namespace:BuildNotifications.Resources.Text"
                    xmlns:icons="clr-namespace:BuildNotifications.Resources.Icons"
                    xmlns:menu="clr-namespace:BuildNotifications.Resources.Menu"
                    xmlns:utils="clr-namespace:BuildNotifications.ViewModel.Utils"
                    xmlns:resourcesNotification="clr-namespace:BuildNotifications.Resources.Notification">

    <DataTemplate x:Key="BuildNodeTemplate" DataType="{x:Type viewModelTree:BuildNodeViewModel}">
        <Grid>
            <Grid Cursor="Hand"
                  Width="{Binding IsLargeSize, Converter={x:Static resourcesBuildTreeBuild:IsLargeToBuildSizeConverter.Instance}, Mode=OneTime}"
                  Height="{DynamicResource BlockThreeQuarters}" Margin="{DynamicResource BlockQuarterThickness}">

                <Grid.ToolTip>
                    <StackPanel Orientation="Vertical" MinWidth="{StaticResource BlockFourteenTimes}">

                        <DockPanel Margin="{StaticResource BlockQuarterYOnlyMargin}">
                            <icons:IconBatch Type="Settings" Width="{StaticResource Block}"
                                                   Margin="{StaticResource BlockHalfXOnlyMargin}"
                                                   Height="{StaticResource Block}" DockPanel.Dock="Left"
                                                   VerticalAlignment="Center"
                                                   Foreground="{DynamicResource Foreground1HalfTransparency}" />

                            <TextBlock DockPanel.Dock="Right" HorizontalAlignment="Right"
                                       VerticalAlignment="Top" Margin="{StaticResource BlockLeft}"
                                       Text="{Binding RelativeChangedDate, Converter={x:Static resourcesNotification:TimeSpanToReadableTextConverter.Instance}}"
                                       FontSize="{StaticResource BlockThreeQuarters}"
                                       Foreground="{DynamicResource Foreground1}" />
                            <TextBlock Text="{Binding StatusDisplayName}" VerticalAlignment="Center"
                                       Foreground="{Binding BuildStatus, Converter={x:Static converter:BuildStatusToBrushConverter.Instance}}"
                                       Background="Transparent" FontWeight="Bold" />
                        </DockPanel>
                        <UniformGrid Columns="{Binding UserColumns}">
                            <DockPanel Margin="{StaticResource BlockQuarterYOnlyMargin}">
                                <icons:IconBatch Type="Queued" Width="{StaticResource Block}"
                                                       Margin="{StaticResource BlockHalfXOnlyMargin}"
                                                       Height="{StaticResource Block}" DockPanel.Dock="Left"
                                                       VerticalAlignment="Center"
                                                       Foreground="{DynamicResource Foreground1HalfTransparency}" />
                                <TextBlock Text="{text:Localized RequestedBy}"
                                           Foreground="{DynamicResource Foreground1HalfTransparency}"
                                           Background="Transparent" DockPanel.Dock="Top"
                                           FontSize="{StaticResource BlockThreeQuarters}" />
                                <TextBlock Text="{Binding RequestedBy}" Foreground="{DynamicResource Foreground1}"
                                           Background="Transparent" />
                            </DockPanel>
                            <DockPanel Margin="{StaticResource BlockQuarterYOnlyMargin}"
                                       Visibility="{Binding RequestedByIsSameAsFor, Converter={x:Static utils:BoolToVisibilityConverter.Inverted}}">
                                <icons:IconBatch Type="Person" Width="{StaticResource Block}"
                                                       Margin="{StaticResource BlockHalfXOnlyMargin}"
                                                       Height="{StaticResource Block}" DockPanel.Dock="Left"
                                                       VerticalAlignment="Center"
                                                       Foreground="{DynamicResource Foreground1HalfTransparency}" />
                                <TextBlock Text="{text:Localized RequestedFor}"
                                           Foreground="{DynamicResource Foreground1HalfTransparency}"
                                           Background="Transparent" DockPanel.Dock="Top"
                                           FontSize="{StaticResource BlockThreeQuarters}" />
                                <TextBlock Text="{Binding RequestedFor}" Foreground="{DynamicResource Foreground1}"
                                           Background="Transparent" />
                            </DockPanel>

                        </UniformGrid>
                    </StackPanel>

                </Grid.ToolTip>

                <Rectangle Fill="{DynamicResource Background3}"
                           Margin="{DynamicResource NegativeBlockHalfThicknessAndABit}"
                           Opacity="{Binding IsHighlighted, Mode=OneTime}" UseLayoutRounding="True">
                    <i:Interaction.Triggers>
                        <ei:DataTrigger Binding="{Binding IsHighlighted}" Value="true">
                            <resourcesBuildTreeBuild:Highlight DoHighlight="True" DoLongHighlight="False" />
                        </ei:DataTrigger>
                        <ei:DataTrigger Binding="{Binding IsHighlighted}" Value="false">
                            <resourcesBuildTreeBuild:Highlight DoHighlight="False" DoLongHighlight="False" />
                        </ei:DataTrigger>
                        <ei:DataTrigger Binding="{Binding DoShortHighlight}" Value="true">
                            <resourcesBuildTreeBuild:ShortHighlight />
                        </ei:DataTrigger>
                    </i:Interaction.Triggers>
                </Rectangle>

                <Rectangle Opacity="0.15" x:Name="BackgroundFillRectangle"
                           Fill="{Binding BuildStatus, Converter={x:Static converter:BuildStatusToBrushConverter.Instance}}"
                           Visibility="{Binding DisplayAsHollow, Converter={x:Static utils:BoolToVisibilityConverter.Inverted}}" />


                <Rectangle Opacity="0.15"
                           Fill="Black"
                           Visibility="{Binding DisplayAsHollow, Converter={x:Static utils:BoolToVisibilityConverter.Instance}}" />

                <Rectangle
                    Fill="{Binding BuildStatus, Converter={x:Static converter:BuildStatusToBrushConverter.Instance}}"
                    x:Name="FillRectangle" />

                <Rectangle
                    Stroke="{Binding BuildStatus, Converter={x:Static converter:BuildStatusToBrushConverter.Instance}}"
                    StrokeThickness="1" x:Name="StrokeRectangle" />


                <i:Interaction.Triggers>
                    <ei:DataTrigger Binding="{Binding IsLargeSize}" Value="true">
                        <resourcesBuildTreeBuild:BuildGrow />
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding IsLargeSize}" Value="false">
                        <resourcesBuildTreeBuild:BuildShrink />
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding Path=IsRemoving}" Value="true">
                        <triggerActions:ElementFadeOutScale Duration="0.4" Anchor="MiddleRight" TargetScaleX="0"
                                                            TargetScaleY="1" />
                    </ei:DataTrigger>
                    <i:EventTrigger EventName="MouseEnter">
                        <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>


            </Grid>

            <Grid.RenderTransform>
                <SkewTransform AngleX="-30" />
            </Grid.RenderTransform>


            <Grid.ContextMenu>
                <ContextMenu>
                    <menu:DecoratedMenuItem Header="{text:Localized GoToBuild}" Command="{Binding GoToBuildCommand}"
                                            IconType="SingleBuild" />
                    <menu:DecoratedMenuItem Header="{text:Localized GoToBranch}" Command="{Binding GoToBranchCommand}"
                                            IconType="Branch"
                                            Visibility="{Binding IsFromPullRequest, Converter={x:Static utils:BoolToVisibilityConverter.Inverted}}" />
                    <menu:DecoratedMenuItem Header="{text:Localized GoToPullRequest}"
                                            Command="{Binding GoToBranchCommand}"
                                            IconType="PullRequest"
                                            Visibility="{Binding IsFromPullRequest, Converter={x:Static utils:BoolToVisibilityConverter.Instance}}" />
                    <menu:DecoratedMenuItem Header="{text:Localized GoToDefinition}"
                                            Command="{Binding GoToDefinitionCommand}" IconType="Definition" />
                </ContextMenu>
            </Grid.ContextMenu>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding GoToBuildCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{DynamicResource Foreground2}" TargetName="FillRectangle" />
                <Setter Property="Stroke" Value="{DynamicResource Foreground2}" TargetName="StrokeRectangle" />
                <Setter Property="Opacity" Value="0.5" TargetName="BackgroundFillRectangle" />
            </Trigger>

            <DataTrigger Binding="{Binding BuildStatus}" Value="Running">
                <Setter Property="StrokeThickness" Value="0" TargetName="StrokeRectangle" />
                <Setter Property="RenderTransform" TargetName="FillRectangle">
                    <Setter.Value>
                        <ScaleTransform ScaleX="{Binding ProgressToDisplay}" ScaleY="1" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding BuildStatus}" Value="Pending">
                <Setter Property="StrokeThickness" Value="0" TargetName="StrokeRectangle" />
                <Setter Property="RenderTransform" TargetName="FillRectangle">
                    <Setter.Value>
                        <ScaleTransform ScaleX="{Binding ProgressToDisplay}" ScaleY="1" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DisplayAsHollow}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" TargetName="FillRectangle" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>