<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModelTree="clr-namespace:BuildNotifications.ViewModel.Tree"
                    xmlns:resourcesBuildTreeBuild="clr-namespace:BuildNotifications.Resources.BuildTree.Build"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:triggerActions="clr-namespace:BuildNotifications.Resources.BuildTree.TriggerActions"
                    xmlns:converter="clr-namespace:BuildNotifications.Resources.BuildTree.Converter"
                    xmlns:text="clr-namespace:BuildNotifications.Resources.Text"
                    xmlns:icons="clr-namespace:BuildNotifications.Resources.Icons"
                    xmlns:menu="clr-namespace:BuildNotifications.Resources.Menu"
                    xmlns:utils="clr-namespace:BuildNotifications.ViewModel.Utils"
                    xmlns:resourcesNotification="clr-namespace:BuildNotifications.Resources.Notification">

    <ContextMenu x:Key="BuildContextMenu">
        <menu:DecoratedMenuItem Header="{text:Localized GoToBuild}" Command="{Binding GoToBuildCommand}"
                                IconType="SingleBuild" />
        <menu:DecoratedMenuItem Header="{text:Localized GoToBranch}" Command="{Binding GoToBranchCommand}"
                                IconType="Branch"
                                Visibility="{Binding IsFromPullRequest, Converter={x:Static utils:BoolToVisibilityConverter.Inverted}}" />
        <menu:DecoratedMenuItem Header="{text:Localized GoToPullRequest}"
                                Command="{Binding GoToBranchCommand}"
                                IconType="PullRequest"
                                Visibility="{Binding IsFromPullRequest, Converter={x:Static utils:BoolToVisibilityConverter.Instance}}" />
        <menu:DecoratedMenuItem Header="{text:Localized GoToDefinition}"
                                Command="{Binding GoToDefinitionCommand}" IconType="Definition" />
    </ContextMenu>


    <StackPanel Orientation="Vertical" MinWidth="{StaticResource BlockFourteenTimes}" x:Key="ToolTip">

        <DockPanel Margin="{StaticResource BlockQuarterYOnlyMargin}">
            <icons:IconBatch Type="Settings" Width="{StaticResource Block}"
                             Margin="{StaticResource BlockHalfXOnlyMargin}"
                             Height="{StaticResource Block}" DockPanel.Dock="Left"
                             VerticalAlignment="Center"
                             Foreground="{DynamicResource Foreground1HalfTransparency}" />

            <TextBlock DockPanel.Dock="Right" HorizontalAlignment="Right"
                       VerticalAlignment="Top" Margin="{StaticResource BlockLeft}"
                       Text="{Binding RelativeChangedDate, Converter={x:Static resourcesNotification:TimeSpanToReadableTextConverter.Instance}}"
                       FontSize="{StaticResource BlockThreeQuarters}"
                       Foreground="{DynamicResource Foreground1}" />
            <TextBlock Text="{Binding StatusDisplayName}" VerticalAlignment="Center"
                       Foreground="{Binding BuildStatus, Converter={x:Static converter:BuildStatusToBrushConverter.Instance}}"
                       Background="Transparent" FontWeight="Bold" />
        </DockPanel>
        <UniformGrid Columns="{Binding UserColumns}">
            <DockPanel Margin="{StaticResource BlockQuarterYOnlyMargin}">
                <icons:IconBatch Type="Queued" Width="{StaticResource Block}"
                                 Margin="{StaticResource BlockHalfXOnlyMargin}"
                                 Height="{StaticResource Block}" DockPanel.Dock="Left"
                                 VerticalAlignment="Center"
                                 Foreground="{DynamicResource Foreground1HalfTransparency}" />
                <TextBlock Text="{text:Localized RequestedBy}"
                           Foreground="{DynamicResource Foreground1HalfTransparency}"
                           Background="Transparent" DockPanel.Dock="Top"
                           FontSize="{StaticResource BlockThreeQuarters}" />
                <TextBlock Text="{Binding RequestedBy}" Foreground="{DynamicResource Foreground1}"
                           Background="Transparent" />
            </DockPanel>
            <DockPanel Margin="{StaticResource BlockQuarterYOnlyMargin}"
                       Visibility="{Binding RequestedByIsSameAsFor, Converter={x:Static utils:BoolToVisibilityConverter.Inverted}}">
                <icons:IconBatch Type="Person" Width="{StaticResource Block}"
                                 Margin="{StaticResource BlockHalfXOnlyMargin}"
                                 Height="{StaticResource Block}" DockPanel.Dock="Left"
                                 VerticalAlignment="Center"
                                 Foreground="{DynamicResource Foreground1HalfTransparency}" />
                <TextBlock Text="{text:Localized RequestedFor}"
                           Foreground="{DynamicResource Foreground1HalfTransparency}"
                           Background="Transparent" DockPanel.Dock="Top"
                           FontSize="{StaticResource BlockThreeQuarters}" />
                <TextBlock Text="{Binding RequestedFor}" Foreground="{DynamicResource Foreground1}"
                           Background="Transparent" />
            </DockPanel>

        </UniformGrid>
    </StackPanel>


    <DataTemplate x:Key="BuildNodeTemplate" DataType="{x:Type viewModelTree:BuildNodeViewModel}">
        <!--Be careful when editing this file, as this template is displayed hundreds of times. Therefore changes easily affect performance.-->
        <Grid>
            <Grid Cursor="Hand" ContextMenu="{StaticResource BuildContextMenu}"
                  Background="{StaticResource BlueLowTransparency}"
                  Width="{Binding IsLargeSize, Converter={x:Static resourcesBuildTreeBuild:IsLargeToBuildSizeConverter.Instance}, Mode=OneTime}"
                  Height="{DynamicResource BlockThreeQuarters}" Margin="{DynamicResource BlockQuarterThickness}"
                  ToolTip="{StaticResource ToolTip}">

                <Rectangle Fill="{DynamicResource Background3}"
                           Margin="{DynamicResource NegativeBlockHalfThicknessAndABit}"
                           Visibility="Collapsed" UseLayoutRounding="True">
                    <i:Interaction.Triggers>
                        <ei:DataTrigger Binding="{Binding IsHighlighted}" Value="true">
                            <resourcesBuildTreeBuild:Highlight DoHighlight="True" DoLongHighlight="False" />
                        </ei:DataTrigger>
                        <ei:DataTrigger Binding="{Binding IsHighlighted}" Value="false">
                            <resourcesBuildTreeBuild:Highlight DoHighlight="False" DoLongHighlight="False" />
                        </ei:DataTrigger>
                        <ei:DataTrigger Binding="{Binding DoShortHighlight}" Value="true">
                            <resourcesBuildTreeBuild:ShortHighlight />
                        </ei:DataTrigger>
                        <ei:DataTrigger Binding="{Binding IsHighlightedBySight}" Value="true">
                            <resourcesBuildTreeBuild:Highlight DoHighlight="True" DoLongHighlight="True" />
                        </ei:DataTrigger>
                        <ei:DataTrigger Binding="{Binding IsHighlightedBySight}" Value="false">
                            <resourcesBuildTreeBuild:Highlight DoHighlight="False" DoLongHighlight="True" />
                        </ei:DataTrigger>
                    </i:Interaction.Triggers>
                </Rectangle>

                <Rectangle
                    Fill="{Binding BuildStatus, Converter={x:Static converter:BuildStatusToBrushConverter.Instance}}"
                    Stroke="{Binding BuildStatus, Converter={x:Static converter:BuildStatusToBrushConverter.Instance}}"
                    x:Name="FillRectangle" />

                <i:Interaction.Triggers>
                    <ei:DataTrigger Binding="{Binding IsLargeSize}" Value="true">
                        <resourcesBuildTreeBuild:BuildGrow />
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding IsLargeSize}" Value="false">
                        <resourcesBuildTreeBuild:BuildShrink />
                    </ei:DataTrigger>
                    <i:EventTrigger EventName="MouseEnter">
                        <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>


            </Grid>

            <Grid.RenderTransform>
                <SkewTransform AngleX="-30" />
            </Grid.RenderTransform>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding GoToBuildCommand}" />
                </i:EventTrigger>
                <ei:DataTrigger Binding="{Binding Path=IsRemoving}" Value="true">
                    <triggerActions:ElementFadeOutScale Duration="0.8" Anchor="MiddleRight" TargetScaleX="0"
                                                        TargetScaleY="1" DoLayoutTransform="True" />
                </ei:DataTrigger>
            </i:Interaction.Triggers>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{DynamicResource Foreground2}" TargetName="FillRectangle" />
                <Setter Property="Stroke" Value="{DynamicResource Foreground2}" TargetName="FillRectangle" />
            </Trigger>

            <DataTrigger Binding="{Binding BuildStatus}" Value="Failed">
                <Setter Property="Fill" Value="{DynamicResource Background1Dark}" TargetName="FillRectangle" />
            </DataTrigger>

            <DataTrigger Binding="{Binding BuildStatus}" Value="Running">
                <Setter Property="RenderTransform" TargetName="FillRectangle">
                    <Setter.Value>
                        <ScaleTransform ScaleX="{Binding ProgressToDisplay}" ScaleY="1" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding BuildStatus}" Value="Pending">
                <Setter Property="RenderTransform" TargetName="FillRectangle">
                    <Setter.Value>
                        <ScaleTransform ScaleX="{Binding ProgressToDisplay}" ScaleY="1" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>