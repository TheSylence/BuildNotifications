name: CI Build

on: [push]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup Java for CodeCoverage results
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1
      
    - name: Download Coverage reporter
      run: Invoke-WebRequest -Uri 'https://github.com/codacy/codacy-coverage-reporter/releases/download/11.2.2/codacy-coverage-reporter-assembly-11.2.2.jar' -UseBasicParsing -OutFile  ./codacy-test-reporter.jar

    - name: Install coverage tools
      run: dotnet tool install --global coverlet.console
      
    - name: Add coverage tool to core test project
      run: dotnet add BuildNotifications.Core.Tests/BuildNotifications.Core.Tests.csproj package coverlet.msbuild
      
    - name: Add coverage tool to test project
      run: dotnet add BuildNotifications.Tests/BuildNotifications.Tests.csproj package coverlet.msbuild
      
    - name: dotnet restore
      run: dotnet restore -r win10-x64
      
    - name: Build 
      run: msbuild -m BuildNotifications.sln /t:Build /p:Configuration=Release
    
    - name: Run tests
      run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=coverage /p:Exclude=[xunit.*]* BuildNotifications.sln --no-build --configuration Release
    
    - name: Upload code coverage results
      run: java -jar ./codacy-test-reporter.jar report -l CSharp -r ./BuildNotifications.Core.Tests/coverage.cobertura.xml -r ./BuildNotifications.Tests/coverage.cobertura.xml -t ${{ secrets.CODACY_PROJECT_TOKEN }}
      if: github.head_ref == 0
